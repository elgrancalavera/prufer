#!/usr/bin/env node

const fs = require('fs')
    , path = require('path')
    , cli = require('./cli')
    , prufer = require('../lib')

if (cli.help || !cli.command) return console.log(usage())

try {
  const run = runtime(cli.command)
      , input = run.parser(cli.input)
      , result = run.command(input)
  console.log(JSON.stringify(result, null, 2))
} catch (error) {
  if (cli.debug) throw error
  console.error(error.message)
  process.exit(1)
}

function runtime(cli_command) {
  switch(cli_command) {
    case 'tree':            return wrap(intArrayParser, prufer.tree)
    case 'random-sequence': return wrap(intParser, prufer.randomSequence)
    case 'random-tree':     return wrap(intParser, prufer.randomTree)
    default:                throw error()
  }
  function wrap(parser, command) { return {parser, command }}
  function error() { return new Error(`Unknown command "${ cli_command }"`) }
}

function intParser(input) {
  var parsed = Number(input)
  if (isNaN(parsed)) throw new Error(input + ' is not a number')
  if (input.indexOf('.') !== -1) throw new Error('input must be an integer')
  return parsed
}

function intArrayParser(input) {
  return input.split(',').map(intParser)
}

function usage() {
  return `
Usage: prufer <command>

where <command> is one of:
    random-sequence, random-tree, tree-from-sequence

prufer --help [-h]                Shows this screen

prufer random-sequence <length>   Generates a random Pr端fer sequence
                                  with the given length

prufer random-tree <node count>   Generates a random tree (graph)
                                  with the given node count

prufer tree <Pr端fer sequence>     Generates the tree (graph) corresponding
                                  to the given Pr端fer sequence. A Pr端fer
                                  sequence must be written as a list of
                                  integers enclosed in quotes: "3,3,3,4"
`
}
