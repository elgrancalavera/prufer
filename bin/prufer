#!/usr/bin/env node

const fs = require('fs')
    , path = require('path')
    , cli = require('./cli')
    , prufer = require('../lib')

if (cli.version) return console.log(require('../package.json').version)
if (cli.help || !cli.command) return console.log(usage())

try {
  const run = runtime(cli.command)
      , input = run.parser(cli.input)
      , result = run.command(input)
  console.log(JSON.stringify(result, null, 2))
} catch (error) {
  if (cli.debug) throw error
  console.error(error.message)
  process.exit(1)
}

function runtime(cli_command) {
  const cmd = (parser, command) => ({ parser, command })
      , err = () => new Error(`Unknown command "${ cli_command }"`)

  switch(cli_command) {
    case 'tree':        return cmd(intArrayParser, prufer.tree)
    case 'random-code': return cmd(intParser, prufer.randomCode)
    case 'random-tree': return cmd(intParser, prufer.randomTree)
    default:            throw err()
  }
}

function intParser(input) {
  var parsed = Number(input)
  if (isNaN(parsed)) throw new Error(input + ' is not a number')
  if (input.indexOf('.') !== -1) throw new Error('input must be an integer')
  return parsed
}

function intArrayParser(input) {
  return JSON.parse(input)
}

function usage() {
  return `
Usage: prufer <command>

where <command> is one of:
    random-code, random-tree, tree

prufer --help [-h]                Shows this screen

prufer random-code <length>       Generates a random Pr端fer code
                                  with the given length

prufer random-tree <node count>   Generates a random tree (graph)
                                  with the given node count

prufer tree <Pr端fer code>         Generates the tree (graph) corresponding
                                  to the given Pr端fer code. A Pr端fer code
                                  must be written as a JSON Array of integers:
                                  "[3,3,3,4]"
`
}
