#!/usr/bin/env node

var fs = require('fs')
  , path = require('path')
  , cli = require('./cli')
  , prufer = require('../lib')

if (cli.help || !cli.command) return console.log(usage())

try {
  const run = runtime()
      , input = run.parser(cli.input)
      , result = run.command(input)
  console.log(JSON.stringify(result, null, 2))
} catch (error) {
  if (cli.debug) throw error
  console.error(error.message)
  process.exit(1)
}

function runtime() {
  const resolve = (parser, command) => ({ parser, command })
  switch(cli.command) {
    case 'tree': return resolve(intArrayParser, prufer.tree)
    case 'random-sequence': return resolve(intParser, prufer.randomSequence)
    case 'random-tree': return resolve(intParser, prufer.randomTree)
    default: throw new Error(`Unknown command "${ cli.command }"`)
  }
}

function intParser(input) {
  var parsed = Number(input)
  if (isNaN(parsed)) throw new Error(input + ' is not a number')
  if (input.indexOf('.') !== -1) throw new Error('input must be an integer')
  return parsed
}

function intArrayParser(input) {
  return input.split(',').map(intParser)
}

function usage() {
  return `
Usage: prufer <command>

where <command> is one of:
    random-sequence, random-tree, tree-from-sequence

prufer --help -h        shows this screen
prufer <cmd> --help -h  quick help on <cmd>
`
}
